{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Shapes","Map","fixWidows","each","string","html","replace","currentState","maxState","timer","interval","setState","startInterval","setInterval","nextState","removeClass","addClass","panZoneSize","panning","pan","up","down","left","right","width","height","mapPosition","getWindowSize","map","getElementById","setPanZones","addEventListener","handleMouseMove","bind","innerWidth","innerHeight","windowWidth","windowHeight","panZones","min","max","event","posX","clientX","posY","clientY","noPan","triggerAnimation","requestAnimationFrame","animate","getMapPosition","style","transform","toString","transformMatrix","getComputedStyle","split","item","parseInt"],"mappings":"AAGAA,MACEC,gBAAiB,IACjBC,KAAM,WACJ,GAAIC,GAAQC,IAEZC,GAAEC,QAAQC,OAAO,WACfJ,EAAMK,aAGRH,EAAEI,UAAUC,MAAM,WAChBV,KAAKW,OAAOT,OACZF,KAAKY,IAAIV,UAKbM,SAAU,aAKVK,UAAW,WAETR,EAAE,kBAAkBS,KAAK,WACvB,GAAIC,GAASV,EAAED,MAAMY,MACrBD,GAASA,EAAOE,QAAQ,YAAY,YACpCZ,EAAED,MAAMY,KAAKD,OAKnBf,KAAKW,QACHO,aAAc,EACdC,SAAU,EACVC,MAAO,KACPC,SAAU,KACVnB,KAAM,WACJ,GAAIC,GAAQC,IAEZD,GAAMmB,WACNnB,EAAMoB,iBAGRA,cAAe,WACb,GAAIpB,GAAQC,IAEZD,GAAMiB,MAAQI,YAAY,WAAYrB,EAAMmB,YAAcnB,EAAMkB,WAGlEI,UAAW,WACT,GAAItB,GAAQC,IAQZ,OANAD,GAAMe,eAEFf,EAAMe,aAAef,EAAMgB,WAC7BhB,EAAMe,aAAe,GAGhBf,EAAMe,cAGfI,SAAU,WACR,GAAInB,GAAQC,IAEZC,GAAE,qBACDqB,YAAY,eAAiBvB,EAAMe,cACnCS,SAAS,eAAiBxB,EAAMsB,eAIrCzB,KAAKY,KACHgB,YAAa,IACbC,SAAS,EACTC,KACEC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,OAAO,GAET5B,QACE6B,MAAO,EACPC,OAAQ,GAEVC,aAAa,EAEbnC,KAAM,WACJ,GAAIC,GAASC,IAGbD,GAAMmC,gBAGNnC,EAAMoC,IAAM9B,SAAS+B,eAAe,OAGpCrC,EAAMsC,cAGNhC,SAASiC,iBAAiB,YAAavC,EAAMwC,gBAAgBC,KAAKzC,KAIpEmC,cAAe,WACb,GAAInC,GAASC,IAEbD,GAAMG,OAAO6B,MAAQ7B,OAAOuC,WAC5B1C,EAAMG,OAAO8B,OAAS9B,OAAOwC,aAG/BL,YAAa,WACX,GAAItC,GAASC,KAGT2C,EAAczC,OAAOuC,WACrBG,EAAe1C,OAAOwC,WAG1B3C,GAAM8C,UACJlB,IACEmB,IAAK,EACLC,IAAKhD,EAAMyB,aAEbI,MACEkB,IAAKF,EAAe7C,EAAMyB,YAC1BuB,IAAKH,GAEPf,MACEiB,IAAK,EACLC,IAAKhD,EAAMyB,aAEbM,OACEgB,IAAKH,EAAc5C,EAAMyB,YACzBuB,IAAKJ,KAMXJ,gBAAiB,SAASS,GACxB,GAAIjD,GAASC,KAETiD,EAAOD,EAAME,QACbC,EAAOH,EAAMI,OAEjBrD,GAAMsD,QAEFF,EAAOpD,EAAM8C,SAASlB,GAAGoB,KAAOI,EAAOpD,EAAM8C,SAASjB,KAAKkB,KAAOG,EAAOlD,EAAM8C,SAAShB,KAAKkB,KAAOE,EAAOlD,EAAM8C,SAASf,MAAMgB,IAClI/C,EAAM0B,SAAU,GAEhB1B,EAAM0B,SAAU,EAGZ0B,GAAQpD,EAAM8C,SAASlB,GAAGmB,KAAOK,GAAQpD,EAAM8C,SAASlB,GAAGoB,MAC7DhD,EAAM2B,IAAIC,IAAK,GAGbwB,GAAQpD,EAAM8C,SAASjB,KAAKkB,KAAOK,GAAQpD,EAAM8C,SAASjB,KAAKmB,MACjEhD,EAAM2B,IAAIE,MAAO,GAGfqB,GAAQlD,EAAM8C,SAAShB,KAAKiB,KAAOG,GAAQlD,EAAM8C,SAAShB,KAAKkB,MACjEhD,EAAM2B,IAAIG,MAAO,GAGfoB,GAAQlD,EAAM8C,SAASf,MAAMgB,KAAOG,GAAQlD,EAAM8C,SAASf,MAAMiB,MACnEhD,EAAM2B,IAAII,OAAQ,GAGpB/B,EAAMuD,qBAKVD,MAAO,WACL,GAAItD,GAASC,IAEbD,GAAM2B,KACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,OAAO,IAKXwB,iBAAkB,WAChB,GAAIvD,GAASC,IAEbE,QAAOqD,sBAAsBxD,EAAMyD,QAAQhB,KAAKzC,KAGlDyD,QAAS,WACP,GAAIzD,GAASC,IAEb,QAAKD,EAAM0B,UAKN1B,EAAMkC,cACTlC,EAAMkC,YAAclC,EAAM0D,kBAIxB1D,EAAM2B,IAAIC,IAAM5B,EAAMkC,YAAY,IAAM,IAC1ClC,EAAMkC,YAAY,GAAKlC,EAAMkC,YAAY,GAAK,GAI5ClC,EAAM2B,IAAIE,MAAQ7B,EAAMkC,YAAY,IAAOlC,EAAMG,OAAO8B,QAAS,IACnEjC,EAAMkC,YAAY,GAAKlC,EAAMkC,YAAY,GAAK,GAI5ClC,EAAM2B,IAAIG,MAAQ9B,EAAMkC,YAAY,IAAM,IAC5ClC,EAAMkC,YAAY,GAAKlC,EAAMkC,YAAY,GAAK,GAI5ClC,EAAM2B,IAAII,OAAS/B,EAAMkC,YAAY,IAAOlC,EAAMG,OAAO6B,OAAQ,IACnEhC,EAAMkC,YAAY,GAAKlC,EAAMkC,YAAY,GAAK,GAGhDlC,EAAMoC,IAAIuB,MAAMC,UAAY,UAAY5D,EAAMkC,YAAY2B,WAAa,QAEvE1D,QAAOqD,sBAAsBxD,EAAMyD,QAAQhB,KAAKzC,MAIlD0D,eAAgB,WACd,GAGII,GAAkBC,iBAAiB9D,KAAKmC,KAAgB,SAM5D,OAHA0B,GAAkBA,EAAgBhD,QAAQ,UAAU,IAAIA,QAAQ,IAAK,IAG9DgD,EAAkBA,EAAgBE,MAAM,MAAM5B,IAAK,SAAS6B,GAC7D,MAAOC,UAASD,EAAM,QAKhCpE,KAAKE","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      Site.Shapes.init();\n      Site.Map.init();\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Shapes = {\n  currentState: 0,\n  maxState: 7,\n  timer: null,\n  interval: 12000,\n  init: function() {\n    var _this = this;\n\n    _this.setState();\n    _this.startInterval();\n  },\n\n  startInterval: function() {\n    var _this = this;\n\n    _this.timer = setInterval(function() {_this.setState();}, _this.interval);\n  },\n\n  nextState: function() {\n    var _this = this;\n\n    _this.currentState++;\n\n    if (_this.currentState > _this.maxState) {\n      _this.currentState = 1;\n    }\n\n    return _this.currentState;\n  },\n\n  setState: function() {\n    var _this = this;\n\n    $('#background-shape')\n    .removeClass('shape-state-' + _this.currentState)\n    .addClass('shape-state-' + _this.nextState());\n  },\n};\n\nSite.Map = {\n  panZoneSize: 100, // in pixels\n  panning: false,\n  pan: {\n    up: false,\n    down: false,\n    left: false,\n    right: false,\n  },\n  window: {\n    width: 0,\n    height: 0,\n  },\n  mapPosition: false,\n\n  init: function() {\n    var _this =  this;\n\n    // Set windowSize\n    _this.getWindowSize();\n\n    // Set map element\n    _this.map = document.getElementById('map');\n\n    // init pan zones\n    _this.setPanZones();\n\n    // bind mouse position\n    document.addEventListener('mousemove', _this.handleMouseMove.bind(_this));\n\n  },\n\n  getWindowSize: function() {\n    var _this =  this;\n\n    _this.window.width = window.innerWidth;\n    _this.window.height = window.innerHeight;\n  },\n\n  setPanZones: function() {\n    var _this =  this;\n\n    // Get window dimensions\n    var windowWidth = window.innerWidth;\n    var windowHeight = window.innerHeight;\n\n    // Set\n    _this.panZones = {\n      up: {\n        min: 0,\n        max: _this.panZoneSize,\n      },\n      down: {\n        min: windowHeight - _this.panZoneSize,\n        max: windowHeight,\n      },\n      left: {\n        min: 0,\n        max: _this.panZoneSize,\n      },\n      right: {\n        min: windowWidth - _this.panZoneSize,\n        max: windowWidth,\n      },\n    };\n\n  },\n\n  handleMouseMove: function(event) {\n    var _this =  this;\n\n    var posX = event.clientX;\n    var posY = event.clientY;\n\n    _this.noPan();\n\n    if (posY > _this.panZones.up.max && posY < _this.panZones.down.min && posX > _this.panZones.left.max && posX < _this.panZones.right.min) { // not in a zone\n      _this.panning = false;\n    } else {\n      _this.panning = true;\n\n      // Check inside which zones\n      if (posY >= _this.panZones.up.min && posY <= _this.panZones.up.max) { //up\n        _this.pan.up = true;\n      }\n\n      if (posY >= _this.panZones.down.min && posY <= _this.panZones.down.max) { //down\n        _this.pan.down = true;\n      }\n\n      if (posX >= _this.panZones.left.min && posX <= _this.panZones.left.max) { //left\n        _this.pan.left = true;\n      }\n\n      if (posX >= _this.panZones.right.min && posX <= _this.panZones.right.max) { //right\n        _this.pan.right = true;\n      }\n\n      _this.triggerAnimation();\n    }\n\n  },\n\n  noPan: function() {\n    var _this =  this;\n\n    _this.pan =  {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n    };\n\n  },\n\n  triggerAnimation: function() {\n    var _this =  this;\n\n    window.requestAnimationFrame(_this.animate.bind(_this));\n  },\n\n  animate: function() {\n    var _this =  this;\n\n    if (!_this.panning) {\n      return true;\n    }\n\n    // Get current map position\n    if (!_this.mapPosition) {\n      _this.mapPosition = _this.getMapPosition();\n    }\n\n    // Move up\n    if (_this.pan.up && _this.mapPosition[5] <= 0) {\n      _this.mapPosition[5] = _this.mapPosition[5] + 1;\n    }\n\n    // Move down\n    if (_this.pan.down && _this.mapPosition[5] >= (_this.window.height * -2)) {\n      _this.mapPosition[5] = _this.mapPosition[5] - 1;\n    }\n\n    // Move left\n    if (_this.pan.left && _this.mapPosition[4] <= 0) {\n      _this.mapPosition[4] = _this.mapPosition[4] + 1;\n    }\n\n    // Move right\n    if (_this.pan.right && _this.mapPosition[4] >= (_this.window.width * -2)) {\n      _this.mapPosition[4] = _this.mapPosition[4] - 1;\n    }\n\n    _this.map.style.transform = 'matrix(' + _this.mapPosition.toString() + ')';\n\n    window.requestAnimationFrame(_this.animate.bind(_this));\n\n  },\n\n  getMapPosition: function() {\n    var _this =  this;\n\n    // Get current element position (transform values)\n    var transformMatrix = getComputedStyle(this.map)['transform']; // Returns a string like \"matrix(0,0,0,0,0,0)\"\n\n    // Get only the values\n    transformMatrix = transformMatrix.replace('matrix(','').replace(')', ''); // Returns a string like \"0,0,0,0,0,0\"\n\n    // Make it into an array\n    return transformMatrix = transformMatrix.split(', ').map( function(item) {\n          return parseInt(item, 10);\n    });; // Returns an array like [0,0,0,0,0,0]\n  },\n};\n\nSite.init();\n"]}