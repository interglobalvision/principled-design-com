{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Map","fixWidows","each","string","html","replace","panZoneSize","panning","pan","up","down","left","right","setPanZones","addEventListener","handleMouseMove","bind","windowWidth","innerWidth","windowHeight","innerHeight","panZones","min","max","event","posX","clientX","posY","clientY","noPanning","animate"],"mappings":"AAGAA,MACEC,gBAAiB,IACjBC,KAAM,WACJ,GAAIC,GAAQC,IAEZC,GAAEC,QAAQC,OAAO,WACfJ,EAAMK,aAGRH,EAAEI,UAAUC,MAAM,WAChBV,KAAKW,IAAIT,UAMbM,SAAU,aAKVI,UAAW,WAETP,EAAE,kBAAkBQ,KAAK,WACvB,GAAIC,GAAST,EAAED,MAAMW,MACrBD,GAASA,EAAOE,QAAQ,YAAY,YACpCX,EAAED,MAAMW,KAAKD,OAKnBd,KAAKW,KACHM,YAAa,GACbC,SAAS,EACTC,KACEC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,OAAO,GAGTrB,KAAM,WACJ,GAAIC,GAASC,IAGbD,GAAMqB,cAGNf,SAASgB,iBAAiB,YAAatB,EAAMuB,gBAAgBC,KAAKxB,KAIpEqB,YAAa,WACX,GAAIrB,GAASC,KAGTwB,EAActB,OAAOuB,WACrBC,EAAexB,OAAOyB,WAG1B5B,GAAM6B,UACJZ,IACEa,IAAK,EACLC,IAAK/B,EAAMc,aAEbI,MACEY,IAAKH,EAAe3B,EAAMc,YAC1BiB,IAAKJ,GAEPR,MACEW,IAAK,EACLC,IAAK/B,EAAMc,aAEbM,OACEU,IAAKL,EAAczB,EAAMc,YACzBiB,IAAKN,KAMXF,gBAAiB,SAASS,GACxB,GAAIhC,GAASC,KAETgC,EAAOD,EAAME,QACbC,EAAOH,EAAMI,OAEbD,GAAOnC,EAAM6B,SAASZ,GAAGc,KAAOI,EAAOnC,EAAM6B,SAASX,KAAKY,KAAOG,EAAOjC,EAAM6B,SAASV,KAAKY,KAAOE,EAAOjC,EAAM6B,SAAST,MAAMU,IAClI9B,EAAMqC,aAENrC,EAAMe,SAAU,EAGZoB,GAAQnC,EAAM6B,SAASZ,GAAGa,KAAOK,GAAQnC,EAAM6B,SAASZ,GAAGc,IAC7D/B,EAAMe,QAAQE,IAAK,EACVkB,GAAQnC,EAAM6B,SAASX,KAAKY,KAAOK,GAAQnC,EAAM6B,SAASX,KAAKa,IACxE/B,EAAMe,QAAQG,MAAO,EACZe,GAAQjC,EAAM6B,SAASV,KAAKW,KAAOG,GAAQjC,EAAM6B,SAASV,KAAKY,IACxE/B,EAAMe,QAAQI,MAAO,EACZc,GAAQjC,EAAM6B,SAAST,MAAMU,KAAOG,GAAQjC,EAAM6B,SAAST,MAAMW,MAC1E/B,EAAMe,QAAQK,OAAQ,GAExBpB,EAAMsC,YAKVD,UAAW,WACT,GAAIrC,GAASC,IAEbD,GAAMe,SAAU,EAChBf,EAAMgB,KACJC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,OAAO,KAMbvB,KAAKE","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n      Site.Map.init();\n\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Map = {\n  panZoneSize: 50, // in pixels\n  panning: false,\n  pan: {\n    up: false,\n    down: false,\n    left: false,\n    right: false,\n  },\n\n  init: function() {\n    var _this =  this;\n\n    // init pan zones\n    _this.setPanZones();\n\n    // bind mouse position\n    document.addEventListener('mousemove', _this.handleMouseMove.bind(_this));\n\n  },\n\n  setPanZones: function() {\n    var _this =  this;\n\n    // Get window dimensions\n    var windowWidth = window.innerWidth;\n    var windowHeight = window.innerHeight;\n\n    // Set\n    _this.panZones = {\n      up: {\n        min: 0,\n        max: _this.panZoneSize,\n      },\n      down: {\n        min: windowHeight - _this.panZoneSize,\n        max: windowHeight,\n      },\n      left: {\n        min: 0,\n        max: _this.panZoneSize,\n      },\n      right: {\n        min: windowWidth - _this.panZoneSize,\n        max: windowWidth,\n      },\n    };\n\n  },\n\n  handleMouseMove: function(event) {\n    var _this =  this;\n\n    var posX = event.clientX;\n    var posY = event.clientY;\n\n    if (posY > _this.panZones.up.max && posY < _this.panZones.down.min && posX > _this.panZones.left.max && posX < _this.panZones.right.min) { // not in a zone\n      _this.noPanning();\n    } else {\n      _this.panning = true;\n\n      // Check inside which zones\n      if (posY >= _this.panZones.up.min && posY <= _this.panZones.up.max) { //up\n        _this.panning.up = true;\n      } else if (posY >= _this.panZones.down.min && posY <= _this.panZones.down.max) { //down\n        _this.panning.down = true;\n      } else if (posX >= _this.panZones.left.min && posX <= _this.panZones.left.max) { //left\n        _this.panning.left = true;\n      } else if (posX >= _this.panZones.right.min && posX <= _this.panZones.right.max) { //right\n        _this.panning.right = true;\n      }\n      _this.animate();\n    }\n\n  },\n\n  noPanning: function() {\n    var _this =  this;\n\n    _this.panning = false;\n    _this.pan =  {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n    };\n\n  }\n};\n\nSite.init();\n"]}